# This workflow will upload a Python Package using PyInstaller when a release is published

name: publish-to-release

on:
  push:
    branches:
      - main

jobs:
  build:
    runs-on: windows-latest
    env:
      OUTPUT_FILE_PREFIX : CSVFilter.Setup

    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: 3.12.1

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          pip install pyinstaller

      - name: Update configuration file
        run: |
          python ./csvfilter/version.py

      - name: Build executable and package release
        run: |
          pyinstaller -F --add-data "resources/*;resources/" --add-data "config.ini;."  --icon=.\resources\csv_filter.ico -w --clean --name ${{ env.OUTPUT_FILE_PREFIX }}.${{ steps.read_config.outputs.version }} main.py

      - name: Read config file
        id: read_config
        run: |
          version=$(python -c "import configparser;config = configparser.ConfigParser();config.read('config.ini');print(config.get('DEFAULT', 'version'))")
          echo "::set-output name=version::$version"

      - name: Create release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ steps.read_config.outputs.version }}
          release_name: Release ${{ steps.read_config.outputs.version }}
          draft: false
          prerelease: false

      - name: Upload release asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: dist/${{ env.OUTPUT_FILE_PREFIX }}.${{ steps.read_config.outputs.version }}.exe
          asset_name: ${{ env.OUTPUT_FILE_PREFIX }}.${{ steps.read_config.outputs.version }}.exe
          asset_content_type: application/octet-stream
